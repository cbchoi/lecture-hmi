{
  "course": {
    "title": "HCI/HMI 강의",
    "description": "Human Computer Interaction / Human Machine Interface Lecture Slides",
    "modules": [
      {
        "id": "csharp-wpf",
        "title": "C# WPF Development",
        "description": "C# WPF를 활용한 반도체 장비 HMI 개발",
        "weeks": [
          {
            "id": "week01-hci-hmi-theory",
            "number": "01",
            "title": "반도체 장비를 위한 HCI/HMI 이론 기초",
            "description": "- 반도체 제조 환경에서 HCI와 HMI의 차이점과 연관성 이해\n- 반도체 장비 운영자 중심의 인터페이스 설계 원칙 습득\n- 산업용 HMI 환경의 특수한 요구사항과 제약사항 파악\n- 사용자 중심 설계(UCD) 방법론을 반도체 장비에 적용하는 능력 확보"
          },
          {
            "id": "week02-csharp-wpf-basics",
            "number": "02",
            "title": "C# WPF 기초 및 MVVM 패턴",
            "description": "- .NET Framework/Core 아키텍처와 WPF 기본 구조 이해\n- XAML 마크업과 데이터 바인딩 메커니즘 습득\n- MVVM 패턴을 활용한 반도체 장비 HMI 아키텍처 설계 능력 확보\n- 반도체 장비 모니터링을 위한 기본 WPF 애플리케이션 개발"
          },
          {
            "id": "week03-csharp-realtime-data",
            "number": "03",
            "title": "C# 실시간 데이터 처리 및 통신",
            "description": "- 반도체 장비의 실시간 센서 데이터 수집 및 처리 기법 습득\n- 멀티스레딩을 활용한 안전하고 효율적인 비동기 프로그래밍 능력 확보\n- TCP/IP, SignalR 등 산업용 통신 프로토콜을 이용한 실시간 데이터 통신 구현\n- 24/7 연속 운영 환경을 위한 메모리 관리 및 성능 최적화 기법 적용"
          },
          {
            "id": "week04-csharp-advanced-ui",
            "number": "04",
            "title": "C# 고급 UI/UX 및 사용자 정의 컨트롤",
            "description": "- 반도체 장비 환경에 특화된 사용자 정의 컨트롤 개발 능력 습득\n- 고급 레이아웃 시스템과 가상화 기법을 활용한 성능 최적화 구현\n- 3D 시각화 및 고급 애니메이션을 통한 직관적 사용자 경험 설계\n- 접근성과 다국어 지원을 고려한 글로벌 산업용 HMI 개발 역량 확보"
          },
          {
            "id": "week05-csharp-test-deploy",
            "number": "05",
            "title": "C# 테스트/배포 및 유지보수",
            "description": "- 반도체 장비 HMI의 체계적인 테스트 전략 및 자동화 테스트 구현 능력 습득\n- CI/CD 파이프라인을 통한 안전하고 효율적인 배포 프로세스 구축\n- 산업용 환경에서의 장기간 운영을 위한 모니터링 및 유지보수 체계 확립\n- 성능 프로파일링과 최적화를 통한 안정적인 24/7 운영 체계 구현"
          }
        ]
      },
      {
        "id": "python-pyside6",
        "title": "Python PySide6 Development",
        "description": "Python PySide6를 활용한 크로스 플랫폼 HMI 개발",
        "weeks": [
          {
            "id": "week06-python-pyside6-basics",
            "number": "06",
            "title": "Python PySide6 기초 및 크로스 플랫폼 HMI 개발",
            "description": "- C# WPF에서 Python PySide6로의 효과적인 전환 및 크로스 플랫폼 HMI 개발 능력 습득\n- Qt Designer를 활용한 GUI 설계 및 시그널-슬롯 메커니즘 이해\n- 반도체 장비 데이터 처리를 위한 Python 생태계 활용 (NumPy, Pandas, Matplotlib)\n- 객체지향 프로그래밍과 MVC 패턴을 적용한 확장 가능한 HMI 아키텍처 구현"
          },
          {
            "id": "week07-python-realtime-data",
            "number": "07",
            "title": "Python PySide6 실시간 데이터 처리 및 멀티스레딩",
            "description": "- PySide6에서 QThread를 활용한 효율적인 멀티스레딩 구현 및 UI 블록킹 방지\n- 실시간 데이터 수집, 처리, 시각화를 위한 고성능 아키텍처 설계\n- 시리얼 통신 및 네트워크 프로토콜을 통한 반도체 장비 데이터 통신 구현\n- SQLite 데이터베이스를 활용한 대용량 데이터 저장 및 이력 관리 시스템"
          },
          {
            "id": "week08-python-advanced-features",
            "number": "08",
            "title": "Python PySide6 고급 기능 및 커스텀 UI 컴포넌트",
            "description": "- 커스텀 위젯 및 고급 UI 컴포넌트 개발로 전문적인 반도체 HMI 구현\n- Model-View 아키텍처 고도화 및 대규모 데이터 처리 최적화\n- 3D 시각화 및 고급 그래픽스를 활용한 직관적인 장비 상태 표현\n- 플러그인 시스템 구축으로 확장 가능한 모듈형 HMI 아키텍처 설계"
          },
          {
            "id": "week09-python-deployment",
            "number": "09",
            "title": "Python PySide6 배포 및 운영 최적화",
            "description": "- 산업용 환경에 적합한 Python PySide6 애플리케이션 패키징 및 배포 전략 수립\n- 크로스 플랫폼 호환성과 성능 최적화를 고려한 배포 파이프라인 구축\n- 자동 업데이트 시스템 구현으로 원격 장비의 유지보수 효율성 극대화\n- 로깅, 모니터링, 보안 인증 시스템을 통한 안정적인 운영 환경 확보"
          }
        ]
      },
      {
        "id": "imgui-cpp",
        "title": "ImGUI C++ Development",
        "description": "ImGUI C++를 활용한 고성능 실시간 HMI 개발",
        "weeks": [
          {
            "id": "week10-imgui-basics",
            "number": "10",
            "title": "ImGUI C++ 기초 및 실시간 반도체 HMI 개발",
            "description": "- ImGUI 즉시 모드 GUI 프레임워크를 활용한 고성능 실시간 반도체 장비 인터페이스 개발\n- C++ 기반 크로스 플랫폼 HMI 시스템 구축 및 네이티브 성능 최적화\n- OpenGL/DirectX 통합을 통한 하드웨어 가속 그래픽스 렌더링 구현\n- 실시간 데이터 시각화 및 인터랙티브 제어 패널 설계"
          },
          {
            "id": "week11-imgui-advanced",
            "number": "11",
            "title": "ImGUI C++ 심화 - 고급 렌더링 및 커스텀 시각화",
            "description": "- ImGUI 고급 렌더링 기법 및 커스텀 드로잉을 활용한 전문적인 반도체 HMI 개발\n- 3D 시각화와 ImGUI의 통합을 통한 직관적인 장비 상태 표현 시스템 구축\n- 고성능 실시간 데이터 처리 및 메모리 최적화를 통한 안정적인 산업용 HMI 구현\n- 커스텀 위젯 개발과 고급 이벤트 처리를 통한 사용자 경험 극대화"
          },
          {
            "id": "week12-imgui-advanced-features",
            "number": "12",
            "title": "ImGUI C++ 고급 기능 - 플러그인 시스템 및 확장성",
            "description": "- ImGUI 플러그인 아키텍처 및 모듈화 시스템 설계를 통한 확장 가능한 HMI 플랫폼 구축\n- 고급 데이터 시각화 엔진 및 대용량 데이터 처리 시스템 개발\n- 멀티스레딩 통합 및 동시성 제어를 통한 고성능 실시간 HMI 구현\n- 국제화(i18n) 및 접근성 지원을 통한 글로벌 산업용 HMI 시스템 완성"
          },
          {
            "id": "week13-imgui-integrated-project",
            "number": "13",
            "title": "ImGUI C++ 통합 프로젝트 - 최종 산업용 HMI 솔루션",
            "description": "- 지난 12주간 학습한 모든 기술을 통합한 완전한 반도체 HMI 솔루션 구축\n- 배포 및 설치 시스템을 통한 실제 산업 환경 적용 준비\n- 성능 최적화 및 보안 강화를 통한 엔터프라이즈급 시스템 완성\n- 실제 반도체 팹 환경 시뮬레이션 및 최종 프로젝트 발표"
          }
        ]
      }
    ]
  }
}